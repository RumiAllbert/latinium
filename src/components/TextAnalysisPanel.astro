---
import TextAnalysisResult from "./TextAnalysisResult";
import TextInputArea from "./TextInputArea";
---

<script>
  // Ensure that React components are correctly loaded and hydrated
  console.log("TextAnalysisPanel script running");
  document.addEventListener("DOMContentLoaded", () => {
    console.log("DOM content loaded in TextAnalysisPanel");

    // Initially hide the analysis section
    const analysisSection = document.getElementById("analysis-section");
    if (analysisSection) {
      analysisSection.classList.add("analysis-section-hidden");
    }

    // Add scroll functionality when analysis is triggered
    window.addEventListener("latin-text-analyzed", () => {
      // Wait for a moment for the results to render
      setTimeout(() => {
        const analysisSection = document.getElementById("analysis-section");
        if (analysisSection) {
          // Ensure it's visible
          analysisSection.classList.remove("analysis-section-hidden");
          analysisSection.classList.add("analysis-section-visible");
          // Scroll to the analysis section with smooth animation
          analysisSection.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });
        }
      }, 500);
    });
  });
</script>

<div class="flex flex-col max-w-5xl mx-auto space-y-8 animate-fade-in">
  <!-- Input Section -->
  <div class="glass-panel overflow-hidden">
    <div class="p-6">
      <h2 class="text-2xl font-serif font-medium mb-4">Latin Text</h2>
      <p class="text-white/70 mb-6 text-sm">
        Enter or paste a Latin text passage below to analyze its grammatical
        structure and relationships. Limited to 500 characters for optimal
        performance.
      </p>
      <TextInputArea client:load />
    </div>
  </div>

  <!-- Analysis Section (initially hidden) -->
  <div id="analysis-section" class="glass-panel overflow-hidden">
    <div class="p-6">
      <h2 class="text-2xl font-serif font-medium mb-4">Analysis</h2>
      <p class="text-white/70 mb-6 text-sm">
        Grammatical breakdown and relationships between words
      </p>
      <TextAnalysisResult client:load />
    </div>
  </div>
</div>

<style>
  /* Enhanced glass effect styling */
  :global(.glass-panel) {
    background: rgba(20, 25, 40, 0.7);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
  }

  :global(.glass-button) {
    background: rgba(30, 40, 60, 0.5);
    backdrop-filter: blur(4px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 6px;
    transition: all 0.2s ease;
  }

  :global(.glass-button:hover) {
    background: rgba(50, 60, 80, 0.5);
    border-color: rgba(255, 255, 255, 0.2);
  }

  :global(.glass-input) {
    background: rgba(20, 30, 50, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    color: white;
    padding: 12px;
    transition: all 0.2s ease;
  }

  :global(.glass-input:focus) {
    background: rgba(30, 40, 60, 0.4);
    border-color: rgba(100, 130, 200, 0.5);
    outline: none;
    box-shadow: 0 0 0 2px rgba(100, 130, 200, 0.2);
  }

  /* New styles for interactive hover relationships */
  :global(.interactive-latin-text) {
    background: rgba(30, 40, 60, 0.3);
    border-radius: 10px;
    padding: 1rem;
    margin: 1rem 0;
    position: relative;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  :global(.animate-fade-in) {
    animation: fadeIn 0.6s ease-out forwards;
  }

  /* Animation for streaming analysis */
  @keyframes pulse {
    0%,
    100% {
      opacity: 0.9;
    }
    50% {
      opacity: 0.7;
    }
  }

  :global(.streaming-display) {
    animation: pulse 2s infinite;
  }
</style>
